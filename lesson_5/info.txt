/* ==================== ОТСТУПЫ ==================== */

( Ремарка Высота объекта зависит от его содержимого)

Отступы это растояние от границ обекта, есть внешний,
есть внутренний.

Внутренние отступы
Расстояние от границ объекта до ЕГО содержимого 
! только для блочных объектов
 
Значения задаются положительным числом 
и единицей измерения (px, %, em, rem)


Блочный тег <DIV> и т.п.
.block {
	/* Верхний */
	padding-top: 20px;
	/* Правый */
	padding-right: 30px;
	/* Нижний */
	padding-bottom: 50px;
	/* Левый */
	padding-left: 80px;

	/* Универсальный параметр */
	/* Анатомия */
	padding: сверху справа снизу слева;
	/* Стрелка часов 12 3 6 9 */
	padding: 20px 30px 50px 80px;


	padding: 0 0 50px 0;
	/* или */
	padding-bottom: 50px;


	/* Одинаковые значения сверху/снизу слева/справа */
	/* сверху/снизу 20px слева/справа 50px */
	padding: 20px 50px;

	/* сверху 20px снизу 40px слева/справа 50px */
	padding: 20px 50px 40px;

	/* Все значения равны */
	/* сверху/снизу слева/справа 50px */
	padding: 50px;

	/* Указание % */
	/* ! Процент от ширины родителя */
	padding: 10% 40% 10% 5%;
}


Стрнно работает! Не задаем строчныйм объектам.
Строчный тег <SPAN> и т.п.
.inline {
	padding: 50px;
}



Внешний отступ

Расстояние от границ объекта до других объектов(а) 
только для блочных объектов


Значения задаются числом и единицей 
измерения (px, %, em, rem).
Значения могут быть отрицательными

Блочный тег <DIV> и т.п.
.block {
	/* Верхний */
	margin-top: 50px;
	margin-top: -50px;
	/* Правый */
	margin-right: 50px;
	/* Нижний */
	margin-bottom: 50px;
	/* Левый */
	margin-left: 50px;

	/* Универсальный параметр */
	/* Анатомия */
	/* margin: сверху справа снизу слева; */
	/* Стрелка часов 12 3 6 9 */
	margin: 20px 30px 50px 80px;

	
	margin: 0 0 50px 0;
	/* или  */
	margin-bottom: 50px;
	

	/* Одинаковые значения сверху/снизу слева/справа */
	/* сверху/снизу 20px слева/справа 50px */
	margin: 20px 50px;

	/* сверху 20px снизу 40px слева/справа 50px */
	margin: 20px 50px 40px;

	/* Все значения равны */
	/* сверху/снизу слева/справа 50px */
	margin: 50px;

	/* Указание % */
	/* Процент от ширины родителя */
	margin: 10% 40% 10% 5%;

	/* margin: 0px 0px 20px 0px; */
}

/* Строчный тег <SPAN> и т.п. */
.inline {
	/* margin: 30px; */
}

/* =============== ШИРИНЫ И ВЫСОТЫ =============== */

Задаются числом и единицой (px, %, em, rem)

 Блочный тег <DIV>, и т.п.
.block {
	/* Конкретная ширины */
	/* width: 300px; */

	/* Ограничители ширины */

	/* Не шире чем */
	/* max-width: 300px; */

	/* Не уже чем */
	/* min-width: 300px; */

	/* Проценты от ширины родителя */
	/* width: 50%; */

	/* Конкретная высота */
	/* height: 300px; */

	/* Ограничители высоты */

	/* Не больше по высоте чем */
	/* max-height: 300px; */

	/* Не меньше по высоте чем */
	/* min-height: 300px; */

	/* Проценты от высоты родителя (*) */
	/* height: 50%; */

	/* (*) - 100500 причин чтобы заработало */
}


/* !!! НЕ работает для СТРОЧНЫХ тегов !!!*/

/* Строчный тег <SPAN>, и т.п. */
.inline {
	/* Не работает */
	/* width: 500px; */
	/* max-width: 300px; */
	/* min-width: 300px; */

	/* Не работает */
	/* height: 500px; */
	/* max-height: 300px; */
	/* min-height: 300px; */
}


/* Нюансы */

/* 1) Использование margin для выравния */
/*
Условия:
1) Объект должен быть блочным
2) Объект должен быть Уже чем родитель
3) Объекту задано выравнивание
*/

.block {
	/* Объект Уже чем родитель */
	/* max-width: 500px; */
	/* Центрирование */
	/* margin: 0px auto; */
	/* Центрирование + отступ */
	/* margin: 0px auto 20px; */

	/* Прибитие объекта к правой стороне */
	/* margin: 0 0 0 auto; */
}
.inline {
	/* Работать небудет */
	/*
	max-width: 500px;
	margin: 0px auto;
	*/
}

/* 2) Схлопывание (наложение) margin */
/* Увидим бОльшее значение */

.block {
	/* Увидим этот отступ, он больше */
	/* margin-bottom: 50px; */
}
.block-2 {
	/* margin-top: 20px; */
}

/* 3) Метод вычисления общего размера */
/*
box-sizing
Применяется для изменения алгоритма 
расчета ширины и высоты элемента. 
Свойство наследуется.
content-box - Основывается на стандартах CSS, 
при этом свойства width и height задают 
ширину и высоту контента и не включают 
в себя значения отступов, полей и границ.
border-box - Свойства width и height включают 
в себя значения полей и границ, но не отступов (margin). 
Эта модель используется браузером Internet Exporer в режиме несовместимости.
padding-box - Свойства width и height включают
в себя значения полей, но не отступов (margin) 
и границ (border). 
*/

.block {
	/* Отступ включен в ширину */
	/*
	width: 500px;
	padding: 50px;
	*/
}

/* 4) auto или 100% */
.block {
	/* По умолчанию */
	/* width: auto; */
	/* width: 100%; */
	/* margin: 0px 50px 0px 0px; */
}

/* ======== УПРАВЛЕНИЕ ПЕРЕИЗБЫТКОМ КОНТЕНТА ====== */
/* ! Только блочные */
/*
overflow 
visible - Отображается все содержание элемента, даже за пределами установленной высоты и ширины. 
hidden - Отображается только область внутри элемента, 
остальное будет скрыто.
scroll - Всегда добавляются полосы прокрутки.
auto - Полосы прокрутки добавляются только при необходимости.
*/

.block {
	/* margin: 0px 0px 50px 0px; */
	/* max-height: 100px; */

	/* По умолчанию */
	/* overflow: visible; */

	/* overflow: hidden; */
}

.block-2 {
	/* margin: 0px -50px 0px 0px; */
}

/* =============== УПРАВЛЕНИЕ ТИПОМ ОБЪЕКТА ========== */
/*
display:
Многоцелевое свойство, которое определяет, как элемент должен быть показан 
в документе.
Свойство не наследуется.
block - Элемент показывается как блочный. Применение этого значения для 
встроенных элементов, например тега <span>, заставляет его вести подобно 
блокам — происходит перенос строк в начале и в конце содержимого.
inline - Элемент отображается как встроенный. Использование блочных тегов, 
таких как <div> и <p>, автоматически создает перенос и показывает содержимое 
этих тегов с новой строки. Значение inline отменяет эту особенность, поэтому 
содержимое блочных элементов начинается с того места, где окончился предыдущий 
элемент. 
inline-block - Это значение генерирует блочный элемент, который обтекается 
другими элементами веб-страницы подобно встроенному элементу. Фактически такой 
элемент по своему действию похож на встраиваемые элементы (вроде тега <img>). 
При этом его внутренняя часть форматируется как блочный элемент, а сам 
элемент — как встроенный.
none - Временно удаляет элемент из документа. Занимаемое им место не 
резервируется и веб-страница формируется так, словно элемента и не было. 
*/

.block {
	/*
	margin: 0px 0px 50px 0px;
	width: 200px;
	display: inline;
	*/
}
.inline {
	/*
	margin: 50px 0px 0px 0px;
	width: 200px;
	display: block;
	*/
}

/* Гибридный (Блочно-строчный) тип */

.ex {
	/* Убрал фантомные (строчные) отступы */
	font-size: 0;
}

.inline-span {
	/*
	font-size: 20px;
	width: 150px;
	display: inline-block;
	background-color: #794f45;
	*/
}

/* Тег <IMG> блочно-строчный */
.image {
	/*
	width: 200px;
	margin: 50px 0px 0px 0px;
	*/
}

.link {
	/*
	color: green;
	margin: 0px 0px 50px 0px;
	display: inline-block;
	*/
}
